#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

USER_HOME="${HOME}"

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		if [ -z "${SUDO:-$HOME}" ]
		then
			SUDO_HOME=/root
		else
			SUDO_HOME="${SUDO:-$HOME}"
		fi

		USER="${SUDO_USER}"
		USER_HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${USER_HOME}"/.local/bin ]
	then
		mkdir -p "${USER_HOME}"/.local/bin/frobulator
	fi

	curl -s -L get.frbltr.app > "${USER_HOME}"/.local/bin/frobulator

	chmod +x "${USER_HOME}"/.local/bin/frobulator
fi

. "${USER_HOME}"/.local/bin/frobulator

# superuser ////////////////////////////////////////////////////////////////////

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="10-20-2022"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"
echo

# variables ////////////////////////////////////////////////////////////////////

# defaults /////////////////////////////////////////////////////////////////////

# functions ////////////////////////////////////////////////////////////////////

frobulator.inf "Generating industrial content entries"
echo

frobulator.fwd "Writing..."
echo

# generate header

cat << 'INDEX-HEADER' -> "industrial/index.html"
		<script>

			$(function(){

				$.get("/modules/anchors.html", function (data) {

					$("#anchors").append(data);

				});

				}
			);

		</script>

		<!-- BEGIN INDEX -->

INDEX-HEADER

# values

extensions_list=(
	jpg
	png
	svg
)

count=1

for extension in ${extensions_list[@]}
do
	for content_items in $(find industrial/* -type f -iname "*.${extension}")
	do
		IFS='/' read -r -a path <<< $(echo "${content_items}")

		content_title=$(cat ${path[0]}/${path[1]}/title)

		# keep first container visible

		if [ "${count}" -gt 1 ]
		then
			container="container hidden"
		else
			container="container"
		fi

# generate content container

cat << CONTENT-CONTAINER ->> "industrial/index.html"
		<!-- BEGIN CONTAINER -->

		<div class='${container}'>

			<div class="flex flex-column">

CONTENT-CONTAINER

cat << CONTENT-TITLE ->> "industrial/index.html"

				<div class="flex-cell flex-cell-center flex-cell-stretch">

					<div class="button">${content_title}</div>

				</div>

				<div class='flex-cell flex-cell-center'>

					<img src="/${path[0]}/${path[1]}/${path[2]}"/>

				</div>

CONTENT-TITLE

cat << CONTENT-CONTAINER ->> "industrial/index.html"
			</div>

		</div>

		<!-- END CONTAINER -->

CONTENT-CONTAINER

	((count++))

	done
done

# generate footer

cat << FOOTER ->> "industrial/index.html"
		<!-- END INDEX -->

		<div class="section" id="anchors">

		<div>

FOOTER

frobulator.inf "Parsed content entries" "[ ${count} ]"
echo

frobulator.scs "Industrial content" "[ Done ]"
echo
